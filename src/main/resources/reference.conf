# Kafka cluster tools configuration
com.gruchalski {

  # Number of ZooKeeper servers for the underlying ZooKeeper ensemble.
  # Use 1, 3 or 5.
  zookeeper.server.ensemble-size = 1
  kafka {

    # Number of Kafka machines in the test cluster.
    cluster.size = 1

    # Broker configuration.
    # These settings are the defaults for Kafka and you most likely do not want to change them for unit tests.
    broker {
      enable-controlled-shutdown = true
      enable-delete-topic = false
      enable-plaintext = true
      enable-ssl = false
      enable-sasl-plaintext = false
      enable-sasl-ssl = false
      rack-info = null
    }

    # Kafka cluster tools producer settings.
    # These settings are the defaults for Kafka and you most likely do not want to change them for unit tests.
    producer {
      acks = -1
      max-block-ms = 60000
      buffer-size = 1048576
      retries = 0
      linger-ms = 0
      request-timeout-ms = 10240
      security-protocol = "plaintext"
    }

    # Kafka cluster tools consumer settings.
    # These settings are the defaults for Kafka and you most likely do not want to change them for unit tests.
    # Except of the poll-timeout-ms!
    consumer {
      group-id = "group"
      auto-offset-reset = "earliest",
      partition-fetch-size = 4096,
      session-timeout = 30000
      security-protocol = "plaintext"
      # How long for does the KafkaCluster.consume() underlying task awaits for the messages until rescheduling.
      poll-timeout-ms = 200
    }

    # How long for to wait for the topic to appear in Kafka after requesting creating the topic
    # until considering the request to be unsuccessful.
    topic-wait-for-create-success-timeout-ms = 1000

    # It's possible to define topics here as well. Topic list can be defined like this:
    #
    # topic.0 {
    #   name = "topic-name.1"
    #   partitions = 2
    #   rackAwareMode = "enforced"
    # }
    #
    # topic.1 {
    #   name = "topic-name.2"
    # }
    #
    # Keep the sequence...
    #
    # topic.N {
    #   name = "topic-name.N"
    #   partitions = number, default is 1
    #   replicationFactor = number, no more than number of brokers, default is 1
    #   rackAwareMode = enforced, disabled or safe
    # }
    #
    # Topics aren't created automatically but the topics defined here become available under the
    # Configuration.`com.gruchalski.kafka.topics` configuration key. These can be passed directly to
    # KafkaCluster.withTopics method.
  }
}